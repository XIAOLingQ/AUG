{"ast":null,"code":"/*\nLanguage: Nim\nDescription: Nim is a statically typed compiled systems programming language.\nWebsite: https://nim-lang.org\nCategory: system\n*/\n\nfunction nim(hljs) {\n  const TYPES = [\"int\", \"int8\", \"int16\", \"int32\", \"int64\", \"uint\", \"uint8\", \"uint16\", \"uint32\", \"uint64\", \"float\", \"float32\", \"float64\", \"bool\", \"char\", \"string\", \"cstring\", \"pointer\", \"expr\", \"stmt\", \"void\", \"auto\", \"any\", \"range\", \"array\", \"openarray\", \"varargs\", \"seq\", \"set\", \"clong\", \"culong\", \"cchar\", \"cschar\", \"cshort\", \"cint\", \"csize\", \"clonglong\", \"cfloat\", \"cdouble\", \"clongdouble\", \"cuchar\", \"cushort\", \"cuint\", \"culonglong\", \"cstringarray\", \"semistatic\"];\n  const KEYWORDS = [\"addr\", \"and\", \"as\", \"asm\", \"bind\", \"block\", \"break\", \"case\", \"cast\", \"const\", \"continue\", \"converter\", \"discard\", \"distinct\", \"div\", \"do\", \"elif\", \"else\", \"end\", \"enum\", \"except\", \"export\", \"finally\", \"for\", \"from\", \"func\", \"generic\", \"guarded\", \"if\", \"import\", \"in\", \"include\", \"interface\", \"is\", \"isnot\", \"iterator\", \"let\", \"macro\", \"method\", \"mixin\", \"mod\", \"nil\", \"not\", \"notin\", \"object\", \"of\", \"or\", \"out\", \"proc\", \"ptr\", \"raise\", \"ref\", \"return\", \"shared\", \"shl\", \"shr\", \"static\", \"template\", \"try\", \"tuple\", \"type\", \"using\", \"var\", \"when\", \"while\", \"with\", \"without\", \"xor\", \"yield\"];\n  const BUILT_INS = [\"stdin\", \"stdout\", \"stderr\", \"result\"];\n  const LITERALS = [\"true\", \"false\"];\n  return {\n    name: 'Nim',\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      type: TYPES,\n      built_in: BUILT_INS\n    },\n    contains: [{\n      className: 'meta',\n      // Actually pragma\n      begin: /\\{\\./,\n      end: /\\.\\}/,\n      relevance: 10\n    }, {\n      className: 'string',\n      begin: /[a-zA-Z]\\w*\"/,\n      end: /\"/,\n      contains: [{\n        begin: /\"\"/\n      }]\n    }, {\n      className: 'string',\n      begin: /([a-zA-Z]\\w*)?\"\"\"/,\n      end: /\"\"\"/\n    }, hljs.QUOTE_STRING_MODE, {\n      className: 'type',\n      begin: /\\b[A-Z]\\w+\\b/,\n      relevance: 0\n    }, {\n      className: 'number',\n      relevance: 0,\n      variants: [{\n        begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/\n      }, {\n        begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/\n      }]\n    }, hljs.HASH_COMMENT_MODE]\n  };\n}\nmodule.exports = nim;","map":{"version":3,"names":["nim","hljs","TYPES","KEYWORDS","BUILT_INS","LITERALS","name","keywords","keyword","literal","type","built_in","contains","className","begin","end","relevance","QUOTE_STRING_MODE","variants","HASH_COMMENT_MODE","module","exports"],"sources":["E:/GLM-UML/web_demo/client/node_modules/highlight.js/lib/languages/nim.js"],"sourcesContent":["/*\nLanguage: Nim\nDescription: Nim is a statically typed compiled systems programming language.\nWebsite: https://nim-lang.org\nCategory: system\n*/\n\nfunction nim(hljs) {\n  const TYPES = [\n    \"int\",\n    \"int8\",\n    \"int16\",\n    \"int32\",\n    \"int64\",\n    \"uint\",\n    \"uint8\",\n    \"uint16\",\n    \"uint32\",\n    \"uint64\",\n    \"float\",\n    \"float32\",\n    \"float64\",\n    \"bool\",\n    \"char\",\n    \"string\",\n    \"cstring\",\n    \"pointer\",\n    \"expr\",\n    \"stmt\",\n    \"void\",\n    \"auto\",\n    \"any\",\n    \"range\",\n    \"array\",\n    \"openarray\",\n    \"varargs\",\n    \"seq\",\n    \"set\",\n    \"clong\",\n    \"culong\",\n    \"cchar\",\n    \"cschar\",\n    \"cshort\",\n    \"cint\",\n    \"csize\",\n    \"clonglong\",\n    \"cfloat\",\n    \"cdouble\",\n    \"clongdouble\",\n    \"cuchar\",\n    \"cushort\",\n    \"cuint\",\n    \"culonglong\",\n    \"cstringarray\",\n    \"semistatic\"\n  ];\n  const KEYWORDS = [\n    \"addr\",\n    \"and\",\n    \"as\",\n    \"asm\",\n    \"bind\",\n    \"block\",\n    \"break\",\n    \"case\",\n    \"cast\",\n    \"const\",\n    \"continue\",\n    \"converter\",\n    \"discard\",\n    \"distinct\",\n    \"div\",\n    \"do\",\n    \"elif\",\n    \"else\",\n    \"end\",\n    \"enum\",\n    \"except\",\n    \"export\",\n    \"finally\",\n    \"for\",\n    \"from\",\n    \"func\",\n    \"generic\",\n    \"guarded\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"include\",\n    \"interface\",\n    \"is\",\n    \"isnot\",\n    \"iterator\",\n    \"let\",\n    \"macro\",\n    \"method\",\n    \"mixin\",\n    \"mod\",\n    \"nil\",\n    \"not\",\n    \"notin\",\n    \"object\",\n    \"of\",\n    \"or\",\n    \"out\",\n    \"proc\",\n    \"ptr\",\n    \"raise\",\n    \"ref\",\n    \"return\",\n    \"shared\",\n    \"shl\",\n    \"shr\",\n    \"static\",\n    \"template\",\n    \"try\",\n    \"tuple\",\n    \"type\",\n    \"using\",\n    \"var\",\n    \"when\",\n    \"while\",\n    \"with\",\n    \"without\",\n    \"xor\",\n    \"yield\"\n  ];\n  const BUILT_INS = [\n    \"stdin\",\n    \"stdout\",\n    \"stderr\",\n    \"result\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n  return {\n    name: 'Nim',\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      type: TYPES,\n      built_in: BUILT_INS\n    },\n    contains: [\n      {\n        className: 'meta', // Actually pragma\n        begin: /\\{\\./,\n        end: /\\.\\}/,\n        relevance: 10\n      },\n      {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [ { begin: /\"\"/ } ]\n      },\n      {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      },\n      {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          { begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/ },\n          { begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/ },\n          { begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/ },\n          { begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/ }\n        ]\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  };\n}\n\nmodule.exports = nim;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}