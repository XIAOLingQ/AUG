{"ast":null,"code":"/*\n Language: GAMS\n Author: Stefan Bechert <stefan.bechert@gmx.net>\n Contributors: Oleg Efimov <efimovov@gmail.com>, Mikko Kouhia <mikko.kouhia@iki.fi>\n Description: The General Algebraic Modeling System language\n Website: https://www.gams.com\n Category: scientific\n */\n\n/** @type LanguageFn */\nfunction gams(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = {\n    keyword: 'abort acronym acronyms alias all and assign binary card diag display ' + 'else eq file files for free ge gt if integer le loop lt maximizing ' + 'minimizing model models ne negative no not option options or ord ' + 'positive prod put putpage puttl repeat sameas semicont semiint smax ' + 'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal: 'eps inf na',\n    built_in: 'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' + 'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' + 'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' + 'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' + 'randBinomial randLinear randTriangle round rPower sigmoid sign ' + 'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' + 'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' + 'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' + 'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' + 'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' + 'handleCollect handleDelete handleStatus handleSubmit heapFree ' + 'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' + 'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' + 'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [{\n      begin: /=[lgenxc]=/\n    }, {\n      begin: /\\$/\n    }]\n  };\n  const QSTR = {\n    // One-line quoted comment string\n    className: 'comment',\n    variants: [{\n      begin: '\\'',\n      end: '\\''\n    }, {\n      begin: '\"',\n      end: '\"'\n    }],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [QSTR, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = {\n    // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [QSTR, ASSIGNMENT, {\n      className: 'comment',\n      // one comment word, then possibly more\n      begin: regex.concat(COMMENT_WORD,\n      // [ ] because \\s would be too broad (matching newlines)\n      regex.anyNumberOfTimes(regex.concat(/[ ]+/, COMMENT_WORD))),\n      relevance: 0\n    }]\n  };\n  return {\n    name: 'GAMS',\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT(/^\\$ontext/, /^\\$offtext/), {\n      className: 'meta',\n      begin: '^\\\\$[a-z0-9]+',\n      end: '$',\n      returnBegin: true,\n      contains: [{\n        className: 'keyword',\n        begin: '^\\\\$[a-z0-9]+'\n      }]\n    }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE,\n    // Declarations\n    {\n      beginKeywords: 'set sets parameter parameters variable variables ' + 'scalar scalars equation equations',\n      end: ';',\n      contains: [hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, ASSIGNMENT, DESCTEXT]\n    }, {\n      // table environment\n      beginKeywords: 'table',\n      end: ';',\n      returnBegin: true,\n      contains: [{\n        // table header row\n        beginKeywords: 'table',\n        end: '$',\n        contains: [DESCTEXT]\n      }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE\n      // Table does not contain DESCTEXT or ASSIGNMENT\n      ]\n    },\n    // Function definitions\n    {\n      className: 'function',\n      begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n      returnBegin: true,\n      contains: [{\n        // Function title\n        className: 'title',\n        begin: /^[a-z0-9_]+/\n      }, PARAMS, SYMBOLS]\n    }, hljs.C_NUMBER_MODE, SYMBOLS]\n  };\n}\nmodule.exports = gams;","map":{"version":3,"names":["gams","hljs","regex","KEYWORDS","keyword","literal","built_in","PARAMS","className","begin","end","excludeBegin","excludeEnd","SYMBOLS","variants","QSTR","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","COMMENT_WORD","DESCTEXT","endsWithParent","concat","anyNumberOfTimes","relevance","name","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords","module","exports"],"sources":["E:/GLM-UML/web_demo/client/node_modules/highlight.js/lib/languages/gams.js"],"sourcesContent":["/*\n Language: GAMS\n Author: Stefan Bechert <stefan.bechert@gmx.net>\n Contributors: Oleg Efimov <efimovov@gmail.com>, Mikko Kouhia <mikko.kouhia@iki.fi>\n Description: The General Algebraic Modeling System language\n Website: https://www.gams.com\n Category: scientific\n */\n\n/** @type LanguageFn */\nfunction gams(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = {\n    keyword:\n      'abort acronym acronyms alias all and assign binary card diag display '\n      + 'else eq file files for free ge gt if integer le loop lt maximizing '\n      + 'minimizing model models ne negative no not option options or ord '\n      + 'positive prod put putpage puttl repeat sameas semicont semiint smax '\n      + 'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal:\n      'eps inf na',\n    built_in:\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy '\n      + 'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact '\n      + 'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max '\n      + 'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power '\n      + 'randBinomial randLinear randTriangle round rPower sigmoid sign '\n      + 'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt '\n      + 'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp '\n      + 'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt '\n      + 'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear '\n      + 'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion '\n      + 'handleCollect handleDelete handleStatus handleSubmit heapFree '\n      + 'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate '\n      + 'licenseLevel licenseStatus maxExecError sleep timeClose timeComp '\n      + 'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [\n      { begin: /=[lgenxc]=/ },\n      { begin: /\\$/ }\n    ]\n  };\n  const QSTR = { // One-line quoted comment string\n    className: 'comment',\n    variants: [\n      {\n        begin: '\\'',\n        end: '\\''\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      }\n    ],\n    illegal: '\\\\n',\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [\n      QSTR,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = { // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [\n      QSTR,\n      ASSIGNMENT,\n      {\n        className: 'comment',\n        // one comment word, then possibly more\n        begin: regex.concat(\n          COMMENT_WORD,\n          // [ ] because \\s would be too broad (matching newlines)\n          regex.anyNumberOfTimes(regex.concat(/[ ]+/, COMMENT_WORD))\n        ),\n        relevance: 0\n      }\n    ]\n  };\n\n  return {\n    name: 'GAMS',\n    aliases: [ 'gms' ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\n      {\n        className: 'meta',\n        begin: '^\\\\$[a-z0-9]+',\n        end: '$',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: '^\\\\$[a-z0-9]+'\n          }\n        ]\n      },\n      hljs.COMMENT('^\\\\*', '$'),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      // Declarations\n      {\n        beginKeywords:\n          'set sets parameter parameters variable variables '\n          + 'scalar scalars equation equations',\n        end: ';',\n        contains: [\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          ASSIGNMENT,\n          DESCTEXT\n        ]\n      },\n      { // table environment\n        beginKeywords: 'table',\n        end: ';',\n        returnBegin: true,\n        contains: [\n          { // table header row\n            beginKeywords: 'table',\n            end: '$',\n            contains: [ DESCTEXT ]\n          },\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          hljs.C_NUMBER_MODE\n          // Table does not contain DESCTEXT or ASSIGNMENT\n        ]\n      },\n      // Function definitions\n      {\n        className: 'function',\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n        returnBegin: true,\n        contains: [\n          { // Function title\n            className: 'title',\n            begin: /^[a-z0-9_]+/\n          },\n          PARAMS,\n          SYMBOLS\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOLS\n    ]\n  };\n}\n\nmodule.exports = gams;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}