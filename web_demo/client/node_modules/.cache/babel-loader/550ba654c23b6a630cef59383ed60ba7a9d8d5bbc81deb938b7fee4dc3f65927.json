{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs';\nimport StateCore from './rules_core/state_core.mjs';\nimport r_normalize from './rules_core/normalize.mjs';\nimport r_block from './rules_core/block.mjs';\nimport r_inline from './rules_core/inline.mjs';\nimport r_linkify from './rules_core/linkify.mjs';\nimport r_replacements from './rules_core/replacements.mjs';\nimport r_smartquotes from './rules_core/smartquotes.mjs';\nimport r_text_join from './rules_core/text_join.mjs';\nconst _rules = [['normalize', r_normalize], ['block', r_block], ['inline', r_inline], ['linkify', r_linkify], ['replacements', r_replacements], ['smartquotes', r_smartquotes],\n// `text_join` finds `text_special` tokens (for escape sequences)\n// and joins them with the rest of the text\n['text_join', r_text_join]];\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('');\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\nCore.prototype.State = StateCore;\nexport default Core;","map":{"version":3,"names":["Ruler","StateCore","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","_rules","Core","ruler","i","length","push","prototype","process","state","rules","getRules","l","State"],"sources":["E:/GLM-UML/web_demo/client/node_modules/markdown-it/lib/parser_core.mjs"],"sourcesContent":["/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,6BAA6B;AAEnD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,MAAMC,MAAM,GAAG,CACb,CAAC,WAAW,EAAOP,WAAW,CAAC,EAC/B,CAAC,OAAO,EAAWC,OAAO,CAAC,EAC3B,CAAC,QAAQ,EAAUC,QAAQ,CAAC,EAC5B,CAAC,SAAS,EAASC,SAAS,CAAC,EAC7B,CAAC,cAAc,EAAIC,cAAc,CAAC,EAClC,CAAC,aAAa,EAAKC,aAAa,CAAC;AACjC;AACA;AACA,CAAC,WAAW,EAAOC,WAAW,CAAC,CAChC;;AAED;AACA;AACA;AACA,SAASE,IAAIA,CAAA,EAAI;EACf;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,KAAK,GAAG,IAAIX,KAAK,CAAC,CAAC;EAExB,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAI,CAACD,KAAK,CAACG,IAAI,CAACL,MAAM,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEH,MAAM,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACAF,IAAI,CAACK,SAAS,CAACC,OAAO,GAAG,UAAUC,KAAK,EAAE;EACxC,MAAMC,KAAK,GAAG,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAErC,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEQ,CAAC,GAAGF,KAAK,CAACL,MAAM,EAAED,CAAC,GAAGQ,CAAC,EAAER,CAAC,EAAE,EAAE;IAC5CM,KAAK,CAACN,CAAC,CAAC,CAACK,KAAK,CAAC;EACjB;AACF,CAAC;AAEDP,IAAI,CAACK,SAAS,CAACM,KAAK,GAAGpB,SAAS;AAEhC,eAAeS,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}