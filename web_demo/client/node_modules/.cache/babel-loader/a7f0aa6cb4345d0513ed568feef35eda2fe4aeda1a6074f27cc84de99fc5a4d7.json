{"ast":null,"code":"// Regexps to match html elements\n\nconst attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nconst unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nconst single_quoted = \"'[^']*'\";\nconst double_quoted = '\"[^\"]*\"';\nconst attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nconst attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nconst open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nconst close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nconst comment = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->';\nconst processing = '<[?][\\\\s\\\\S]*?[?]>';\nconst declaration = '<![A-Za-z][^>]*>';\nconst cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE };","map":{"version":3,"names":["attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","RegExp","HTML_OPEN_CLOSE_TAG_RE"],"sources":["E:/GLM-UML/web_demo/client/node_modules/markdown-it/lib/common/html_re.mjs"],"sourcesContent":["// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAO,4BAA4B;AAElD,MAAMC,QAAQ,GAAQ,wBAAwB;AAC9C,MAAMC,aAAa,GAAG,SAAS;AAC/B,MAAMC,aAAa,GAAG,SAAS;AAE/B,MAAMC,UAAU,GAAI,KAAK,GAAGH,QAAQ,GAAG,GAAG,GAAGC,aAAa,GAAG,GAAG,GAAGC,aAAa,GAAG,GAAG;AAEtF,MAAME,SAAS,GAAK,SAAS,GAAGL,SAAS,GAAG,cAAc,GAAGI,UAAU,GAAG,KAAK;AAE/E,MAAME,QAAQ,GAAM,0BAA0B,GAAGD,SAAS,GAAG,YAAY;AAEzE,MAAME,SAAS,GAAK,kCAAkC;AACtD,MAAMC,OAAO,GAAO,uCAAuC;AAC3D,MAAMC,UAAU,GAAI,oBAAoB;AACxC,MAAMC,WAAW,GAAG,kBAAkB;AACtC,MAAMC,KAAK,GAAS,gCAAgC;AAEpD,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAAC,MAAM,GAAGP,QAAQ,GAAG,GAAG,GAAGC,SAAS,GAAG,GAAG,GAAGC,OAAO,GAC1D,GAAG,GAAGC,UAAU,GAAG,GAAG,GAAGC,WAAW,GAAG,GAAG,GAAGC,KAAK,GAAG,GAAG,CAAC;AACjF,MAAMG,sBAAsB,GAAG,IAAID,MAAM,CAAC,MAAM,GAAGP,QAAQ,GAAG,GAAG,GAAGC,SAAS,GAAG,GAAG,CAAC;AAEpF,SAASK,WAAW,EAAEE,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}