{"ast":null,"code":"// Process footnotes\n//\n'use strict';\n\n/// /////////////////////////////////////////////////////////////////////////////\n// Renderer partials\nimport \"core-js/modules/es.array.push.js\";\nfunction render_footnote_anchor_name(tokens, idx, options, env /*, slf */) {\n  const n = Number(tokens[idx].meta.id + 1).toString();\n  let prefix = '';\n  if (typeof env.docId === 'string') prefix = `-${env.docId}-`;\n  return prefix + n;\n}\nfunction render_footnote_caption(tokens, idx /*, options, env, slf */) {\n  let n = Number(tokens[idx].meta.id + 1).toString();\n  if (tokens[idx].meta.subId > 0) n += `:${tokens[idx].meta.subId}`;\n  return `[${n}]`;\n}\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  const id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  const caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  let refid = id;\n  if (tokens[idx].meta.subId > 0) refid += `:${tokens[idx].meta.subId}`;\n  return `<sup class=\"footnote-ref\"><a href=\"#fn${id}\" id=\"fnref${refid}\">${caption}</a></sup>`;\n}\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') + '<section class=\"footnotes\">\\n' + '<ol class=\"footnotes-list\">\\n';\n}\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`;\n  return `<li id=\"fn${id}\" class=\"footnote-item\">`;\n}\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`;\n\n  /* â†© with escape code to prevent display as Apple Emoji on iOS */\n  return ` <a href=\"#fnref${id}\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>`;\n}\nexport default function footnote_plugin(md) {\n  const parseLinkLabel = md.helpers.parseLinkLabel;\n  const isSpace = md.utils.isSpace;\n  md.renderer.rules.footnote_ref = render_footnote_ref;\n  md.renderer.rules.footnote_block_open = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close = render_footnote_block_close;\n  md.renderer.rules.footnote_open = render_footnote_open;\n  md.renderer.rules.footnote_close = render_footnote_close;\n  md.renderer.rules.footnote_anchor = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    const start = state.bMarks[startLine] + state.tShift[startLine];\n    const max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) return false;\n    if (state.src.charCodeAt(start) !== 0x5B /* [ */) return false;\n    if (state.src.charCodeAt(start + 1) !== 0x5E /* ^ */) return false;\n    let pos;\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false;\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n    if (pos === start + 2) return false; // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) return false;\n    if (silent) return true;\n    pos++;\n    if (!state.env.footnotes) state.env.footnotes = {};\n    if (!state.env.footnotes.refs) state.env.footnotes.refs = {};\n    const label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[`:${label}`] = -1;\n    const token_fref_o = new state.Token('footnote_reference_open', '', 1);\n    token_fref_o.meta = {\n      label\n    };\n    token_fref_o.level = state.level++;\n    state.tokens.push(token_fref_o);\n    const oldBMark = state.bMarks[startLine];\n    const oldTShift = state.tShift[startLine];\n    const oldSCount = state.sCount[startLine];\n    const oldParentType = state.parentType;\n    const posAfterColon = pos;\n    const initial = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n    let offset = initial;\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos);\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n      pos++;\n    }\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n    state.md.block.tokenize(state, startLine, endLine, true);\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n    const token_fref_c = new state.Token('footnote_reference_close', '', -1);\n    token_fref_c.level = --state.level;\n    state.tokens.push(token_fref_c);\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    const max = state.posMax;\n    const start = state.pos;\n    if (start + 2 >= max) return false;\n    if (state.src.charCodeAt(start) !== 0x5E /* ^ */) return false;\n    if (state.src.charCodeAt(start + 1) !== 0x5B /* [ */) return false;\n    const labelStart = start + 2;\n    const labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) return false;\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) state.env.footnotes = {};\n      if (!state.env.footnotes.list) state.env.footnotes.list = [];\n      const footnoteId = state.env.footnotes.list.length;\n      const tokens = [];\n      state.md.inline.parse(state.src.slice(labelStart, labelEnd), state.md, state.env, tokens);\n      const token = state.push('footnote_ref', '', 0);\n      token.meta = {\n        id: footnoteId\n      };\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens\n      };\n    }\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    const max = state.posMax;\n    const start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) return false;\n    if (!state.env.footnotes || !state.env.footnotes.refs) return false;\n    if (state.src.charCodeAt(start) !== 0x5B /* [ */) return false;\n    if (state.src.charCodeAt(start + 1) !== 0x5E /* ^ */) return false;\n    let pos;\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false;\n      if (state.src.charCodeAt(pos) === 0x0A) return false;\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n    if (pos === start + 2) return false; // no empty footnote labels\n    if (pos >= max) return false;\n    pos++;\n    const label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[`:${label}`] === 'undefined') return false;\n    if (!silent) {\n      if (!state.env.footnotes.list) state.env.footnotes.list = [];\n      let footnoteId;\n      if (state.env.footnotes.refs[`:${label}`] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = {\n          label,\n          count: 0\n        };\n        state.env.footnotes.refs[`:${label}`] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[`:${label}`];\n      }\n      const footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n      const token = state.push('footnote_ref', '', 0);\n      token.meta = {\n        id: footnoteId,\n        subId: footnoteSubId,\n        label\n      };\n    }\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    let tokens;\n    let current;\n    let currentLabel;\n    let insideRef = false;\n    const refTokens = {};\n    if (!state.env.footnotes) {\n      return;\n    }\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) {\n        current.push(tok);\n      }\n      return !insideRef;\n    });\n    if (!state.env.footnotes.list) {\n      return;\n    }\n    const list = state.env.footnotes.list;\n    state.tokens.push(new state.Token('footnote_block_open', '', 1));\n    for (let i = 0, l = list.length; i < l; i++) {\n      const token_fo = new state.Token('footnote_open', '', 1);\n      token_fo.meta = {\n        id: i,\n        label: list[i].label\n      };\n      state.tokens.push(token_fo);\n      if (list[i].tokens) {\n        tokens = [];\n        const token_po = new state.Token('paragraph_open', 'p', 1);\n        token_po.block = true;\n        tokens.push(token_po);\n        const token_i = new state.Token('inline', '', 0);\n        token_i.children = list[i].tokens;\n        token_i.content = list[i].content;\n        tokens.push(token_i);\n        const token_pc = new state.Token('paragraph_close', 'p', -1);\n        token_pc.block = true;\n        tokens.push(token_pc);\n      } else if (list[i].label) {\n        tokens = refTokens[`:${list[i].label}`];\n      }\n      if (tokens) state.tokens = state.tokens.concat(tokens);\n      let lastParagraph;\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n      const t = list[i].count > 0 ? list[i].count : 1;\n      for (let j = 0; j < t; j++) {\n        const token_a = new state.Token('footnote_anchor', '', 0);\n        token_a.meta = {\n          id: i,\n          subId: j,\n          label: list[i].label\n        };\n        state.tokens.push(token_a);\n      }\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n      state.tokens.push(new state.Token('footnote_close', '', -1));\n    }\n    state.tokens.push(new state.Token('footnote_block_close', '', -1));\n  }\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, {\n    alt: ['paragraph', 'reference']\n  });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n}\n;","map":{"version":3,"names":["render_footnote_anchor_name","tokens","idx","options","env","n","Number","meta","id","toString","prefix","docId","render_footnote_caption","subId","render_footnote_ref","slf","rules","footnote_anchor_name","caption","footnote_caption","refid","render_footnote_block_open","xhtmlOut","render_footnote_block_close","render_footnote_open","render_footnote_close","render_footnote_anchor","footnote_plugin","md","parseLinkLabel","helpers","isSpace","utils","renderer","footnote_ref","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","footnote_def","state","startLine","endLine","silent","start","bMarks","tShift","max","eMarks","src","charCodeAt","pos","footnotes","refs","label","slice","token_fref_o","Token","level","push","oldBMark","oldTShift","oldSCount","sCount","oldParentType","parentType","posAfterColon","initial","offset","ch","blkIndent","block","tokenize","token_fref_c","footnote_inline","posMax","labelStart","labelEnd","list","footnoteId","length","inline","parse","token","content","count","footnoteSubId","footnote_tail","current","currentLabel","insideRef","refTokens","filter","tok","type","i","l","token_fo","token_po","token_i","children","token_pc","concat","lastParagraph","pop","t","j","token_a","ruler","before","alt","after","core"],"sources":["E:/GLM-UML/web_demo/client/node_modules/markdown-it-footnote/index.mjs"],"sourcesContent":["// Process footnotes\n//\n'use strict'\n\n/// /////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name (tokens, idx, options, env/*, slf */) {\n  const n = Number(tokens[idx].meta.id + 1).toString()\n  let prefix = ''\n\n  if (typeof env.docId === 'string') prefix = `-${env.docId}-`\n\n  return prefix + n\n}\n\nfunction render_footnote_caption (tokens, idx/*, options, env, slf */) {\n  let n = Number(tokens[idx].meta.id + 1).toString()\n\n  if (tokens[idx].meta.subId > 0) n += `:${tokens[idx].meta.subId}`\n\n  return `[${n}]`\n}\n\nfunction render_footnote_ref (tokens, idx, options, env, slf) {\n  const id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n  const caption = slf.rules.footnote_caption(tokens, idx, options, env, slf)\n  let refid = id\n\n  if (tokens[idx].meta.subId > 0) refid += `:${tokens[idx].meta.subId}`\n\n  return `<sup class=\"footnote-ref\"><a href=\"#fn${id}\" id=\"fnref${refid}\">${caption}</a></sup>`\n}\n\nfunction render_footnote_block_open (tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n'\n}\n\nfunction render_footnote_block_close () {\n  return '</ol>\\n</section>\\n'\n}\n\nfunction render_footnote_open (tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`\n\n  return `<li id=\"fn${id}\" class=\"footnote-item\">`\n}\n\nfunction render_footnote_close () {\n  return '</li>\\n'\n}\n\nfunction render_footnote_anchor (tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`\n\n  /* â†© with escape code to prevent display as Apple Emoji on iOS */\n  return ` <a href=\"#fnref${id}\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>`\n}\n\nexport default function footnote_plugin (md) {\n  const parseLinkLabel = md.helpers.parseLinkLabel\n  const isSpace = md.utils.isSpace\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close\n  md.renderer.rules.footnote_open         = render_footnote_open\n  md.renderer.rules.footnote_close        = render_footnote_close\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name\n\n  // Process footnote block definition\n  function footnote_def (state, startLine, endLine, silent) {\n    const start = state.bMarks[startLine] + state.tShift[startLine]\n    const max = state.eMarks[startLine]\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) return false\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) return false\n\n    let pos\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break\n      }\n    }\n\n    if (pos === start + 2) return false // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) return false\n    if (silent) return true\n    pos++\n\n    if (!state.env.footnotes) state.env.footnotes = {}\n    if (!state.env.footnotes.refs) state.env.footnotes.refs = {}\n    const label = state.src.slice(start + 2, pos - 2)\n    state.env.footnotes.refs[`:${label}`] = -1\n\n    const token_fref_o = new state.Token('footnote_reference_open', '', 1)\n    token_fref_o.meta  = { label }\n    token_fref_o.level = state.level++\n    state.tokens.push(token_fref_o)\n\n    const oldBMark = state.bMarks[startLine]\n    const oldTShift = state.tShift[startLine]\n    const oldSCount = state.sCount[startLine]\n    const oldParentType = state.parentType\n\n    const posAfterColon = pos\n    const initial = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    state.tShift[startLine] = pos - posAfterColon\n    state.sCount[startLine] = offset - initial\n\n    state.bMarks[startLine] = posAfterColon\n    state.blkIndent += 4\n    state.parentType = 'footnote'\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true)\n\n    state.parentType = oldParentType\n    state.blkIndent -= 4\n    state.tShift[startLine] = oldTShift\n    state.sCount[startLine] = oldSCount\n    state.bMarks[startLine] = oldBMark\n\n    const token_fref_c = new state.Token('footnote_reference_close', '', -1)\n    token_fref_c.level = --state.level\n    state.tokens.push(token_fref_c)\n\n    return true\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline (state, silent) {\n    const max = state.posMax\n    const start = state.pos\n\n    if (start + 2 >= max) return false\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) return false\n\n    const labelStart = start + 2\n    const labelEnd = parseLinkLabel(state, start + 1)\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) return false\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) state.env.footnotes = {}\n      if (!state.env.footnotes.list) state.env.footnotes.list = []\n      const footnoteId = state.env.footnotes.list.length\n      const tokens = []\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens\n      )\n\n      const token = state.push('footnote_ref', '', 0)\n      token.meta = { id: footnoteId }\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens\n      }\n    }\n\n    state.pos = labelEnd + 1\n    state.posMax = max\n    return true\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref (state, silent) {\n    const max = state.posMax\n    const start = state.pos\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) return false\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) return false\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) return false\n\n    let pos\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false\n      if (state.src.charCodeAt(pos) === 0x0A) return false\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break\n      }\n    }\n\n    if (pos === start + 2) return false // no empty footnote labels\n    if (pos >= max) return false\n    pos++\n\n    const label = state.src.slice(start + 2, pos - 1)\n    if (typeof state.env.footnotes.refs[`:${label}`] === 'undefined') return false\n\n    if (!silent) {\n      if (!state.env.footnotes.list) state.env.footnotes.list = []\n\n      let footnoteId\n\n      if (state.env.footnotes.refs[`:${label}`] < 0) {\n        footnoteId = state.env.footnotes.list.length\n        state.env.footnotes.list[footnoteId] = { label, count: 0 }\n        state.env.footnotes.refs[`:${label}`] = footnoteId\n      } else {\n        footnoteId = state.env.footnotes.refs[`:${label}`]\n      }\n\n      const footnoteSubId = state.env.footnotes.list[footnoteId].count\n      state.env.footnotes.list[footnoteId].count++\n\n      const token = state.push('footnote_ref', '', 0)\n      token.meta = { id: footnoteId, subId: footnoteSubId, label }\n    }\n\n    state.pos = pos\n    state.posMax = max\n    return true\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail (state) {\n    let tokens\n    let current\n    let currentLabel\n    let insideRef = false\n    const refTokens = {}\n\n    if (!state.env.footnotes) { return }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true\n        current = []\n        currentLabel = tok.meta.label\n        return false\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current\n        return false\n      }\n      if (insideRef) { current.push(tok) }\n      return !insideRef\n    })\n\n    if (!state.env.footnotes.list) { return }\n    const list = state.env.footnotes.list\n\n    state.tokens.push(new state.Token('footnote_block_open', '', 1))\n\n    for (let i = 0, l = list.length; i < l; i++) {\n      const token_fo = new state.Token('footnote_open', '', 1)\n      token_fo.meta = { id: i, label: list[i].label }\n      state.tokens.push(token_fo)\n\n      if (list[i].tokens) {\n        tokens = []\n\n        const token_po = new state.Token('paragraph_open', 'p', 1)\n        token_po.block = true\n        tokens.push(token_po)\n\n        const token_i = new state.Token('inline', '', 0)\n        token_i.children = list[i].tokens\n        token_i.content = list[i].content\n        tokens.push(token_i)\n\n        const token_pc = new state.Token('paragraph_close', 'p', -1)\n        token_pc.block    = true\n        tokens.push(token_pc)\n      } else if (list[i].label) {\n        tokens = refTokens[`:${list[i].label}`]\n      }\n\n      if (tokens) state.tokens = state.tokens.concat(tokens)\n\n      let lastParagraph\n\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop()\n      } else {\n        lastParagraph = null\n      }\n\n      const t = list[i].count > 0 ? list[i].count : 1\n      for (let j = 0; j < t; j++) {\n        const token_a = new state.Token('footnote_anchor', '', 0)\n        token_a.meta = { id: i, subId: j, label: list[i].label }\n        state.tokens.push(token_a)\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph)\n      }\n\n      state.tokens.push(new state.Token('footnote_close', '', -1))\n    }\n\n    state.tokens.push(new state.Token('footnote_block_close', '', -1))\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: ['paragraph', 'reference'] })\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline)\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref)\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail)\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}