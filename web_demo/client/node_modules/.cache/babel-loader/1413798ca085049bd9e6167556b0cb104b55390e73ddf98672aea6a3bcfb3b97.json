{"ast":null,"code":"// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([[0, 65533],\n// C1 Unicode control character reference replacements\n[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint =\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n  let output = \"\";\n  if (codePoint > 0xffff) {\n    codePoint -= 0x10000;\n    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n    codePoint = 0xdc00 | codePoint & 0x3ff;\n  }\n  output += String.fromCharCode(codePoint);\n  return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n  var _a;\n  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {\n    return 0xfffd;\n  }\n  return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n  return fromCodePoint(replaceCodePoint(codePoint));\n}","map":{"version":3,"names":["decodeMap","Map","fromCodePoint","_a","String","codePoint","output","fromCharCode","replaceCodePoint","get","decodeCodePoint"],"sources":["https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts"],"sourcesContent":[null],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAG,IAAIC,GAAG,CAAC,CACtB,CAAC,CAAC,EAAE,KAAK,CAAC;AACV;AACA,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,CACb,CAAC;AAEF;;;AAGA,OAAO,MAAMC,aAAa;AACtB;AACA,CAAAC,EAAA,GAAAC,MAAM,CAACF,aAAa,cAAAC,EAAA,cAAAA,EAAA,GACpB,UAAUE,SAAiB;EACvB,IAAIC,MAAM,GAAG,EAAE;EAEf,IAAID,SAAS,GAAG,MAAM,EAAE;IACpBA,SAAS,IAAI,OAAO;IACpBC,MAAM,IAAIF,MAAM,CAACG,YAAY,CACvBF,SAAS,KAAK,EAAE,GAAI,KAAK,GAAI,MAAM,CACxC;IACDA,SAAS,GAAG,MAAM,GAAIA,SAAS,GAAG,KAAM;;EAG5CC,MAAM,IAAIF,MAAM,CAACG,YAAY,CAACF,SAAS,CAAC;EACxC,OAAOC,MAAM;AACjB,CAAC;AAEL;;;;;AAKA,OAAM,SAAUE,gBAAgBA,CAACH,SAAiB;;EAC9C,IAAKA,SAAS,IAAI,MAAM,IAAIA,SAAS,IAAI,MAAM,IAAKA,SAAS,GAAG,QAAQ,EAAE;IACtE,OAAO,MAAM;;EAGjB,OAAO,CAAAF,EAAA,GAAAH,SAAS,CAACS,GAAG,CAACJ,SAAS,CAAC,cAAAF,EAAA,cAAAA,EAAA,GAAIE,SAAS;AAChD;AAEA;;;;;;;AAOA,eAAc,SAAUK,eAAeA,CAACL,SAAiB;EACrD,OAAOH,aAAa,CAACM,gBAAgB,CAACH,SAAS,CAAC,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}