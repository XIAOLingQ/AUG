{"ast":null,"code":"/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction rust(hljs) {\n  const regex = hljs.regex;\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: regex.concat(/\\b/, /(?!let|for|while|if|else|match\\b)/, hljs.IDENT_RE, regex.lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\"abstract\", \"as\", \"async\", \"await\", \"become\", \"box\", \"break\", \"const\", \"continue\", \"crate\", \"do\", \"dyn\", \"else\", \"enum\", \"extern\", \"false\", \"final\", \"fn\", \"for\", \"if\", \"impl\", \"in\", \"let\", \"loop\", \"macro\", \"match\", \"mod\", \"move\", \"mut\", \"override\", \"priv\", \"pub\", \"ref\", \"return\", \"self\", \"Self\", \"static\", \"struct\", \"super\", \"trait\", \"true\", \"try\", \"type\", \"typeof\", \"unsafe\", \"unsized\", \"use\", \"virtual\", \"where\", \"while\", \"yield\"];\n  const LITERALS = [\"true\", \"false\", \"Some\", \"None\", \"Ok\", \"Err\"];\n  const BUILTINS = [\n  // functions\n  'drop ',\n  // traits\n  \"Copy\", \"Send\", \"Sized\", \"Sync\", \"Drop\", \"Fn\", \"FnMut\", \"FnOnce\", \"ToOwned\", \"Clone\", \"Debug\", \"PartialEq\", \"PartialOrd\", \"Eq\", \"Ord\", \"AsRef\", \"AsMut\", \"Into\", \"From\", \"Default\", \"Iterator\", \"Extend\", \"IntoIterator\", \"DoubleEndedIterator\", \"ExactSizeIterator\", \"SliceConcatExt\", \"ToString\",\n  // macros\n  \"assert!\", \"assert_eq!\", \"bitflags!\", \"bytes!\", \"cfg!\", \"col!\", \"concat!\", \"concat_idents!\", \"debug_assert!\", \"debug_assert_eq!\", \"env!\", \"eprintln!\", \"panic!\", \"file!\", \"format!\", \"format_args!\", \"include_bytes!\", \"include_str!\", \"line!\", \"local_data_key!\", \"module_path!\", \"option_env!\", \"print!\", \"println!\", \"select!\", \"stringify!\", \"try!\", \"unimplemented!\", \"unreachable!\", \"vec!\", \"write!\", \"writeln!\", \"macro_rules!\", \"assert_ne!\", \"debug_assert_ne!\"];\n  const TYPES = [\"i8\", \"i16\", \"i32\", \"i64\", \"i128\", \"isize\", \"u8\", \"u16\", \"u32\", \"u64\", \"u128\", \"usize\", \"f32\", \"f64\", \"str\", \"char\", \"bool\", \"Box\", \"Option\", \"Result\", \"String\", \"Vec\"];\n  return {\n    name: 'Rust',\n    aliases: ['rs'],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: ['self']\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      begin: /b?\"/,\n      illegal: null\n    }), {\n      className: 'string',\n      variants: [{\n        begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/\n      }, {\n        begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n      }]\n    }, {\n      className: 'symbol',\n      begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n    }, {\n      className: 'number',\n      variants: [{\n        begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX\n      }, {\n        begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX\n      }, {\n        begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX\n      }, {\n        begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' + NUMBER_SUFFIX\n      }],\n      relevance: 0\n    }, {\n      begin: [/fn/, /\\s+/, hljs.UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      }\n    }, {\n      className: 'meta',\n      begin: '#!?\\\\[',\n      end: '\\\\]',\n      contains: [{\n        className: 'string',\n        begin: /\"/,\n        end: /\"/\n      }]\n    }, {\n      begin: [/let/, /\\s+/, /(?:mut\\s+)?/, hljs.UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"keyword\",\n        4: \"variable\"\n      }\n    },\n    // must come before impl/for rule later\n    {\n      begin: [/for/, /\\s+/, hljs.UNDERSCORE_IDENT_RE, /\\s+/, /in/],\n      className: {\n        1: \"keyword\",\n        3: \"variable\",\n        5: \"keyword\"\n      }\n    }, {\n      begin: [/type/, /\\s+/, hljs.UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    }, {\n      begin: [/(?:trait|enum|struct|union|impl|for)/, /\\s+/, hljs.UNDERSCORE_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: {\n        keyword: \"Self\",\n        built_in: BUILTINS,\n        type: TYPES\n      }\n    }, {\n      className: \"punctuation\",\n      begin: '->'\n    }, FUNCTION_INVOKE]\n  };\n}\nmodule.exports = rust;","map":{"version":3,"names":["rust","hljs","regex","FUNCTION_INVOKE","className","relevance","begin","concat","IDENT_RE","lookahead","NUMBER_SUFFIX","KEYWORDS","LITERALS","BUILTINS","TYPES","name","aliases","keywords","$pattern","type","keyword","literal","built_in","illegal","contains","C_LINE_COMMENT_MODE","COMMENT","inherit","QUOTE_STRING_MODE","variants","UNDERSCORE_IDENT_RE","end","module","exports"],"sources":["E:/GLM-UML/llm-chat-demo/chat-frontend/node_modules/highlight.js/lib/languages/rust.js"],"sourcesContent":["/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction rust(hljs) {\n  const regex = hljs.regex;\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: regex.concat(\n      /\\b/,\n      /(?!let|for|while|if|else|match\\b)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\n    \"abstract\",\n    \"as\",\n    \"async\",\n    \"await\",\n    \"become\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"do\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"final\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"macro\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"override\",\n    \"priv\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"Self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"typeof\",\n    \"unsafe\",\n    \"unsized\",\n    \"use\",\n    \"virtual\",\n    \"where\",\n    \"while\",\n    \"yield\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"Some\",\n    \"None\",\n    \"Ok\",\n    \"Err\"\n  ];\n  const BUILTINS = [\n    // functions\n    'drop ',\n    // traits\n    \"Copy\",\n    \"Send\",\n    \"Sized\",\n    \"Sync\",\n    \"Drop\",\n    \"Fn\",\n    \"FnMut\",\n    \"FnOnce\",\n    \"ToOwned\",\n    \"Clone\",\n    \"Debug\",\n    \"PartialEq\",\n    \"PartialOrd\",\n    \"Eq\",\n    \"Ord\",\n    \"AsRef\",\n    \"AsMut\",\n    \"Into\",\n    \"From\",\n    \"Default\",\n    \"Iterator\",\n    \"Extend\",\n    \"IntoIterator\",\n    \"DoubleEndedIterator\",\n    \"ExactSizeIterator\",\n    \"SliceConcatExt\",\n    \"ToString\",\n    // macros\n    \"assert!\",\n    \"assert_eq!\",\n    \"bitflags!\",\n    \"bytes!\",\n    \"cfg!\",\n    \"col!\",\n    \"concat!\",\n    \"concat_idents!\",\n    \"debug_assert!\",\n    \"debug_assert_eq!\",\n    \"env!\",\n    \"eprintln!\",\n    \"panic!\",\n    \"file!\",\n    \"format!\",\n    \"format_args!\",\n    \"include_bytes!\",\n    \"include_str!\",\n    \"line!\",\n    \"local_data_key!\",\n    \"module_path!\",\n    \"option_env!\",\n    \"print!\",\n    \"println!\",\n    \"select!\",\n    \"stringify!\",\n    \"try!\",\n    \"unimplemented!\",\n    \"unreachable!\",\n    \"vec!\",\n    \"write!\",\n    \"writeln!\",\n    \"macro_rules!\",\n    \"assert_ne!\",\n    \"debug_assert_ne!\"\n  ];\n  const TYPES = [\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"i128\",\n    \"isize\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"u128\",\n    \"usize\",\n    \"f32\",\n    \"f64\",\n    \"str\",\n    \"char\",\n    \"bool\",\n    \"Box\",\n    \"Option\",\n    \"Result\",\n    \"String\",\n    \"Vec\"\n  ];\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', { contains: [ 'self' ] }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'string',\n        variants: [\n          { begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n          { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)'\n                   + NUMBER_SUFFIX }\n        ],\n        relevance: 0\n      },\n      {\n        begin: [\n          /fn/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.function\"\n        }\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        begin: [\n          /let/,\n          /\\s+/,\n          /(?:mut\\s+)?/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"keyword\",\n          4: \"variable\"\n        }\n      },\n      // must come before impl/for rule later\n      {\n        begin: [\n          /for/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s+/,\n          /in/\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"variable\",\n          5: \"keyword\"\n        }\n      },\n      {\n        begin: [\n          /type/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          /(?:trait|enum|struct|union|impl|for)/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          keyword: \"Self\",\n          built_in: BUILTINS,\n          type: TYPES\n        }\n      },\n      {\n        className: \"punctuation\",\n        begin: '->'\n      },\n      FUNCTION_INVOKE\n    ]\n  };\n}\n\nmodule.exports = rust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}