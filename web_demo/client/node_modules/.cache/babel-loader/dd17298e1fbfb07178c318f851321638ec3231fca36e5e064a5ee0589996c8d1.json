{"ast":null,"code":"// Utilities\n//\n\nimport * as mdurl from 'mdurl';\nimport * as ucmicro from 'uc.micro';\nimport { decodeHTML } from 'entities';\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\nfunction isValidEntityCode(c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n  if (c === 0x0B) {\n    return false;\n  }\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  }\n  // out of range\n  if (c > 0x10FFFF) {\n    return false;\n  }\n  return true;\n}\nfunction fromCodePoint(c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000;\n    const surrogate1 = 0xd800 + (c >> 10);\n    const surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\nconst UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g;\nconst ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\nfunction replaceEntityPattern(match, name) {\n  if (name.charCodeAt(0) === 0x23 /* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n    return match;\n  }\n  const decoded = decodeHTML(match);\n  if (decoded !== match) {\n    return decoded;\n  }\n  return match;\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n    return replaceEntityPattern(match, entity);\n  });\n}\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch);\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21 /* ! */:\n    case 0x22 /* \" */:\n    case 0x23 /* # */:\n    case 0x24 /* $ */:\n    case 0x25 /* % */:\n    case 0x26 /* & */:\n    case 0x27 /* ' */:\n    case 0x28 /* ( */:\n    case 0x29 /* ) */:\n    case 0x2A /* * */:\n    case 0x2B /* + */:\n    case 0x2C /* , */:\n    case 0x2D /* - */:\n    case 0x2E /* . */:\n    case 0x2F /* / */:\n    case 0x3A /* : */:\n    case 0x3B /* ; */:\n    case 0x3C /* < */:\n    case 0x3D /* = */:\n    case 0x3E /* > */:\n    case 0x3F /* ? */:\n    case 0x40 /* @ */:\n    case 0x5B /* [ */:\n    case 0x5C /* \\ */:\n    case 0x5D /* ] */:\n    case 0x5E /* ^ */:\n    case 0x5F /* _ */:\n    case 0x60 /* ` */:\n    case 0x7B /* { */:\n    case 0x7C /* | */:\n    case 0x7D /* } */:\n    case 0x7E /* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = {\n  mdurl,\n  ucmicro\n};\nexport { lib, assign, isString, has, unescapeMd, unescapeAll, isValidEntityCode, fromCodePoint, escapeHtml, arrayReplaceAt, isSpace, isWhiteSpace, isMdAsciiPunct, isPunctChar, escapeRE, normalizeReference };","map":{"version":3,"names":["mdurl","ucmicro","decodeHTML","_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","match","name","charCodeAt","test","code","toLowerCase","parseInt","decoded","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","P","S","isMdAsciiPunct","normalizeReference","trim","toUpperCase","lib"],"sources":["E:/GLM-UML/llm-chat-demo/chat-frontend/node_modules/markdown-it/lib/common/utils.mjs"],"sourcesContent":["// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}