{"ast":null,"code":"/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(hljs) {\n  const regex = hljs.regex;\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"CONNECT\", \"OPTIONS\", \"PATCH\", \"TRACE\"];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n    // IP\n    {\n      className: 'number',\n      begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n      relevance: 5\n    },\n    // Other numbers\n    {\n      className: 'number',\n      begin: /\\b\\d+\\b/,\n      relevance: 0\n    },\n    // Requests\n    {\n      className: 'string',\n      begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n      end: /\"/,\n      keywords: HTTP_VERBS,\n      illegal: /\\n/,\n      relevance: 5,\n      contains: [{\n        begin: /HTTP\\/[12]\\.\\d'/,\n        relevance: 5\n      }]\n    },\n    // Dates\n    {\n      className: 'string',\n      // dates must have a certain length, this prevents matching\n      // simple array accesses a[123] and [] and other common patterns\n      // found in other languages\n      begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n      illegal: /\\n/,\n      relevance: 1\n    }, {\n      className: 'string',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: /\\n/,\n      relevance: 0\n    },\n    // User agent / relevance boost\n    {\n      className: 'string',\n      begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 3\n    },\n    // Strings\n    {\n      className: 'string',\n      begin: /\"/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 0\n    }]\n  };\n}\nmodule.exports = accesslog;","map":{"version":3,"names":["accesslog","hljs","regex","HTTP_VERBS","name","contains","className","begin","relevance","concat","either","end","keywords","illegal","module","exports"],"sources":["E:/GLM-UML/llm-chat-demo/chat-frontend/node_modules/highlight.js/lib/languages/accesslog.js"],"sourcesContent":["/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(hljs) {\n  const regex = hljs.regex;\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS,\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,SAASA,CAACC,IAAI,EAAE;EACvB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACxB;EACA,MAAMC,UAAU,GAAG,CACjB,KAAK,EACL,MAAM,EACN,MAAM,EACN,KAAK,EACL,QAAQ,EACR,SAAS,EACT,SAAS,EACT,OAAO,EACP,OAAO,CACR;EACD,OAAO;IACLC,IAAI,EAAE,mBAAmB;IACzBC,QAAQ,EAAE;IACR;IACA;MACEC,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,kDAAkD;MACzDC,SAAS,EAAE;IACb,CAAC;IACD;IACA;MACEF,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,SAAS;MAChBC,SAAS,EAAE;IACb,CAAC;IACD;IACA;MACEF,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAEL,KAAK,CAACO,MAAM,CAAC,GAAG,EAAEP,KAAK,CAACQ,MAAM,CAAC,GAAGP,UAAU,CAAC,CAAC;MACrDQ,GAAG,EAAE,GAAG;MACRC,QAAQ,EAAET,UAAU;MACpBU,OAAO,EAAE,IAAI;MACbL,SAAS,EAAE,CAAC;MACZH,QAAQ,EAAE,CACR;QACEE,KAAK,EAAE,iBAAiB;QACxBC,SAAS,EAAE;MACb,CAAC;IAEL,CAAC;IACD;IACA;MACEF,SAAS,EAAE,QAAQ;MACnB;MACA;MACA;MACAC,KAAK,EAAE,mBAAmB;MAC1BM,OAAO,EAAE,IAAI;MACbL,SAAS,EAAE;IACb,CAAC,EACD;MACEF,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,IAAI;MACXI,GAAG,EAAE,IAAI;MACTE,OAAO,EAAE,IAAI;MACbL,SAAS,EAAE;IACb,CAAC;IACD;IACA;MACEF,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,qBAAqB;MAC5BI,GAAG,EAAE,GAAG;MACRE,OAAO,EAAE,IAAI;MACbL,SAAS,EAAE;IACb,CAAC;IACD;IACA;MACEF,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,GAAG;MACVI,GAAG,EAAE,GAAG;MACRE,OAAO,EAAE,IAAI;MACbL,SAAS,EAAE;IACb,CAAC;EAEL,CAAC;AACH;AAEAM,MAAM,CAACC,OAAO,GAAGf,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}