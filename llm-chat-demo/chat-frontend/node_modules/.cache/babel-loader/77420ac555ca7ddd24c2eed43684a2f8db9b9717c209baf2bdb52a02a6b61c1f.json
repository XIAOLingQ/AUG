{"ast":null,"code":"/*\nLanguage: Thrift\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Thrift message definition format\nWebsite: https://thrift.apache.org\nCategory: protocols\n*/\n\nfunction thrift(hljs) {\n  const TYPES = [\"bool\", \"byte\", \"i16\", \"i32\", \"i64\", \"double\", \"string\", \"binary\"];\n  const KEYWORDS = [\"namespace\", \"const\", \"typedef\", \"struct\", \"enum\", \"service\", \"exception\", \"void\", \"oneway\", \"set\", \"list\", \"map\", \"required\", \"optional\"];\n  return {\n    name: 'Thrift',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: 'true false'\n    },\n    contains: [hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'class',\n      beginKeywords: 'struct enum service exception',\n      end: /\\{/,\n      illegal: /\\n/,\n      contains: [hljs.inherit(hljs.TITLE_MODE, {\n        // hack: eating everything after the first title\n        starts: {\n          endsWithParent: true,\n          excludeEnd: true\n        }\n      })]\n    }, {\n      begin: '\\\\b(set|list|map)\\\\s*<',\n      keywords: {\n        type: [...TYPES, \"set\", \"list\", \"map\"]\n      },\n      end: '>',\n      contains: ['self']\n    }]\n  };\n}\nmodule.exports = thrift;","map":{"version":3,"names":["thrift","hljs","TYPES","KEYWORDS","name","keywords","keyword","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","beginKeywords","end","illegal","inherit","TITLE_MODE","starts","endsWithParent","excludeEnd","begin","module","exports"],"sources":["E:/GLM-UML/llm-chat-demo/chat-frontend/node_modules/highlight.js/lib/languages/thrift.js"],"sourcesContent":["/*\nLanguage: Thrift\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Thrift message definition format\nWebsite: https://thrift.apache.org\nCategory: protocols\n*/\n\nfunction thrift(hljs) {\n  const TYPES = [\n    \"bool\",\n    \"byte\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"double\",\n    \"string\",\n    \"binary\"\n  ];\n  const KEYWORDS = [\n    \"namespace\",\n    \"const\",\n    \"typedef\",\n    \"struct\",\n    \"enum\",\n    \"service\",\n    \"exception\",\n    \"void\",\n    \"oneway\",\n    \"set\",\n    \"list\",\n    \"map\",\n    \"required\",\n    \"optional\"\n  ];\n  return {\n    name: 'Thrift',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: 'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'struct enum service exception',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            // hack: eating everything after the first title\n            starts: {\n              endsWithParent: true,\n              excludeEnd: true\n            } })\n        ]\n      },\n      {\n        begin: '\\\\b(set|list|map)\\\\s*<',\n        keywords: { type: [\n          ...TYPES,\n          \"set\",\n          \"list\",\n          \"map\"\n        ] },\n        end: '>',\n        contains: [ 'self' ]\n      }\n    ]\n  };\n}\n\nmodule.exports = thrift;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAMA,CAACC,IAAI,EAAE;EACpB,MAAMC,KAAK,GAAG,CACZ,MAAM,EACN,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,QAAQ,CACT;EACD,MAAMC,QAAQ,GAAG,CACf,WAAW,EACX,OAAO,EACP,SAAS,EACT,QAAQ,EACR,MAAM,EACN,SAAS,EACT,WAAW,EACX,MAAM,EACN,QAAQ,EACR,KAAK,EACL,MAAM,EACN,KAAK,EACL,UAAU,EACV,UAAU,CACX;EACD,OAAO;IACLC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;MACRC,OAAO,EAAEH,QAAQ;MACjBI,IAAI,EAAEL,KAAK;MACXM,OAAO,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE,CACRR,IAAI,CAACS,iBAAiB,EACtBT,IAAI,CAACU,WAAW,EAChBV,IAAI,CAACW,mBAAmB,EACxBX,IAAI,CAACY,oBAAoB,EACzB;MACEC,SAAS,EAAE,OAAO;MAClBC,aAAa,EAAE,+BAA+B;MAC9CC,GAAG,EAAE,IAAI;MACTC,OAAO,EAAE,IAAI;MACbR,QAAQ,EAAE,CACRR,IAAI,CAACiB,OAAO,CAACjB,IAAI,CAACkB,UAAU,EAAE;QAC5B;QACAC,MAAM,EAAE;UACNC,cAAc,EAAE,IAAI;UACpBC,UAAU,EAAE;QACd;MAAE,CAAC,CAAC;IAEV,CAAC,EACD;MACEC,KAAK,EAAE,wBAAwB;MAC/BlB,QAAQ,EAAE;QAAEE,IAAI,EAAE,CAChB,GAAGL,KAAK,EACR,KAAK,EACL,MAAM,EACN,KAAK;MACL,CAAC;MACHc,GAAG,EAAE,GAAG;MACRP,QAAQ,EAAE,CAAE,MAAM;IACpB,CAAC;EAEL,CAAC;AACH;AAEAe,MAAM,CAACC,OAAO,GAAGzB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}